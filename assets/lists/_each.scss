////
/// @group lists
////

/// Creates a new list with the results of calling a provided function on every element in this list.
/// @name each
///
/// @param {List} $list
/// @param {String} $function
/// @param {Arguments} $args...
///
/// @return {List}
///
/// @example
///  $list: ('a', 'b', 'c');
///  each($list, 'str-insert', 'x', 1)
///  // ('xa', 'xb', 'xc')

@function sg-each($list, $function, $args...) {
  $listSeparator: list-separator($list);
  $argSeparator: list-separator($args);
  $results: ();

  @if not function-exists($function) {
    @error 'Function #{$function}() does not exist!';
  }

  @each $item in $list {
    $newArgs: join(append((), $item, $argSeparator), $args, $argSeparator);
    $call: if(function-exists('get-function'), call(get-function($function), $newArgs...), call($function, $newArgs...));
    $results: append($results, $call, $listSeparator);
  }

  @return $results;
}

/// @name walk
/// @alias each
@function sg-walk($list, $function, $args...) {
  @return sg-each($list, $function, $args...);
}
